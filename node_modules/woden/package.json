{
  "name": "woden",
  "version": "3.1.0",
  "description": "A small, simple proxy server module with some nice controls for caching.",
  "main": "index.js",
  "scripts": {
    "test": "jshint index.js src/*.js && tape test/*",
    "start": "node index.js",
    "example": "node examples/index.js"
  },
  "keywords": [
    "node"
  ],
  "contributors": [
    {
      "name": "Jacob Lowe",
      "url": "https://github.com/jcblw"
    }
  ],
  "author": {
    "name": "Andy Burke",
    "email": "aburke@bitflood.org"
  },
  "license": "MIT",
  "dependencies": {
    "http-proxy": "^1.7.0",
    "node.extend": "^1.1.3",
    "sha1": "^1.1.0",
    "sorted-object": "^1.0.0",
    "tinycache": "^0.1.5"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/honeinc/woden"
  },
  "devDependencies": {
    "jshint": "^2.5.11",
    "tape": "^3.0.3"
  },
  "gitHead": "4314e176196421b0b9400fd9bf6a88a627ce84b7",
  "readme": "# Woden [![Build Status](https://travis-ci.org/honeinc/woden.svg?branch=master)](https://travis-ci.org/honeinc/woden)\n\n![Woden](https://cloud.githubusercontent.com/assets/273857/5469053/e6c140a2-858b-11e4-97b1-ee4c1a39d352.png)\n\nWoden is a small, simple proxy server module with some nice controls for caching.\n\nIts name comes from the Germanic god Woden's traditional role as the [leader of the Wild Hunt](http://en.wikipedia.org/wiki/W%C5%8Dden#Medieval_and_early_modern_folklore).\n\n## Install \n\n    $ npm install woden\n    \n## Usage\n\n```javascript\nvar Woden = require( 'woden' ),\n    woden = new Woden({}),\n    DS = {};\n    \nwoden.when( /google/, {\n    getKey: function( path, query ) { // allows you to generate keys\n        return 'foo:' + path; \n    },\n    headers: {\n        'X-Bar': 'Baz' // set custom headers when sending to proxy\n    },\n    params: {\n        'apiKey': 'myToken' // set additional url param when sending to proxy\n    }\n    caching: false // don't cache responses from google\n});\n\nwoden.when( /foo.org/, {\n    cacheTimeout: function( cacheEntry, req, proxyRes ) {\n        if ( cacheEntry.body.length > 10000000 ) {\n            return -1; // don't cache big responses\n        }\n\n        if ( req.url.match( /bar/) ) {\n            return 0; // cache bar stuff forever\n        }\n\n        if ( proxyRes.statusCode === 404 ) {\n            return -1; // don't cache 404 responses\n        }\n\n        return 10000; // only cache for 10 seconds\n    }  \n});\n\nwoden.store({ // custom storeAdapter\n    get: function( key, callback ) {\n        callback( null, DS[key] ); // getting information\n    },\n    set: function( key, value, callback, cachetimeMS ) { // setting values to store\n        DS[ key ] = value; // value.body is a buffer \n        callback( );\n    }\n});\n\nwoden.listen( 9000 ); // listen on port\n```\n\n##### Hitting server\n\n    $ curl -L -G -d \"\\$url=http://google.com\" http://localhost:9000/\n    \nto set the url of the page to proxy to, set the `$url` param. Also if you need to specify a path you can either do that in the $url param or on the original.\n\n    $ curl -L -G -d \"\\$url=http://google.com\" http://localhost:9000/imghp\n\nor \n\n    $ curl -L -G -d \"\\$url=http://google.com/imghp\" http://localhost:9000\n  \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/honeinc/woden/issues"
  },
  "homepage": "https://github.com/honeinc/woden",
  "_id": "woden@3.1.0",
  "_shasum": "b2bfaf8938c90e3b7c9b4a74e066abd2981f8111",
  "_from": "../../../../var/folders/j2/d0p5mk8d3kg3twcbdv33kq680000gp/T/npm-20365-aadbe406/git-cache-d116b0f5c4cf/4314e176196421b0b9400fd9bf6a88a627ce84b7",
  "_resolved": "git+https://github.com/clakech/woden#4314e176196421b0b9400fd9bf6a88a627ce84b7"
}
